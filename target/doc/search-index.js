var searchIndex = new Map(JSON.parse('[["benchmark",{"t":"FFONNNNOONNNNNNNNNNNNNNNNNNNNNNHOOOOOOHHOOOONNNNNNNNNNONNH","n":["BenchmarkResult","SystemInfo","analytic_value","borrow","","borrow_mut","","cpu_cores","cpu_model","deref","","deref_mut","","drop","","fmt","","from","","from_subset","","gather","get_cpu_model","get_memory_gb","get_rust_version","init","","into","","is_in_subset","","main","memory_gb","name","os","paths","rayon_threads","relative_error","run_heston_benchmarks","run_monte_carlo_benchmarks","rust_version","rustc_flags","throughput_paths_per_sec","time_ms","to_subset","","to_subset_unchecked","","try_from","","try_into","","type_id","","value","vzip","","write_results_to_csv"],"q":[[0,"benchmark"],[58,"core::option"],[59,"alloc::string"],[60,"core::fmt"],[61,"alloc::vec"],[62,"core::result"],[63,"core::any"]],"i":"``bj101000101010101010000010101`010101``00110101010101101`","f":"``{bd}{f{{f{c}}}{}}0{{{f{h}}}{{f{hc}}}{}}0{jl}{jn}{l{{f{c}}}{}}0{l{{f{hc}}}{}}0{lA`}0{{{f{j}}{f{hAb}}}Ad}{{{f{b}}{f{hAb}}}Ad}{cc{}}0{{{f{c}}}e{}{}}0{{}j}{{}n}{{}Af}1{{}l}0{{}c{}}0{fAh}0{{}A`}{jAf}{bn}{jn}{bl}{jl}{bd}{{}{{Aj{b}}}}044{bAf}0{f{{d{c}}}{}}0{fc{}}0{c{{Al{e}}}{}{}}0{{}{{Al{c}}}{}}0{fAn}05{{}c{}}0{{{f{{B`{b}}}}{f{j}}{f{Bb}}}A`}","D":"h","p":[[5,"BenchmarkResult",0],[6,"Option",58,null,1],[1,"reference",null,null,1],[0,"mut"],[5,"SystemInfo",0],[1,"usize"],[5,"String",59],[1,"unit"],[5,"Formatter",60],[8,"Result",60],[1,"f64"],[1,"bool"],[5,"Vec",61],[6,"Result",62,null,1],[5,"TypeId",63],[1,"slice"],[1,"str"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADYAAwAAABEAFAAHAB4AHAA=","P":[[3,"T"],[7,""],[9,"T"],[13,""],[17,"T"],[19,"SS,SP"],[21,""],[27,"U"],[29,""],[44,"SS"],[48,"U,T"],[50,"U"],[52,""],[55,"V"],[57,""]]}],["fast_sde",{"t":"EECCCCCCCCCHHHHHHHPPPPPPPPPPGIPNNNNNNNNNNNNNNNNNNNNNNCNOOOOOOOOOOOOOOOOOOOOHHHHHHHFNNNNNNNNNNNNHNNNNNNNCCTTFFTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNHHHHHHNOOONOONOONNNONNNNNNNNNNNNNNOONNNPPPPPGNNNNNNNNNNNNNNNNNNNNNOOOOOOOCCCCCCFNNNNNNNNNNNNNNONOONNNNNNNPPPFFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNOOOOONNNONNNNNNNNNNNNNNNNNONNNOFFNNNNNNNNNNNNNNNNNNNNNNNOOONOOOONNNNNNNNNNNNNNKMMMMFNNNNNNNNNNNNNONONONNNNNNFFOONNNNNNNNNNNNNONNNNNNNNNNNOOONNNNNNNNNNNNONNHHFFNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNHNNNNNNNNNNNNNNCCCFNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNN","n":["SdeError","SdeResult","analytics","error","math_utils","mc","models","output","rng","solvers","bs_analytic","bs_call_delta","bs_call_gamma","bs_call_price","bs_call_rho","bs_call_theta","bs_call_vega","bs_put_price","CalibrationError","Err","FellerConditionViolation","InvalidConfiguration","InvalidParameters","MonteCarloError","NumericalInstability","Ok","PayoffError","RandomGenerationError","SdeError","SdeResult","UnsupportedOperation","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt","","from","from_subset","init","into","is_in_subset","to_owned","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","validation","vzip","constraint","context","current_error","feller_value","field","kappa","method","operation","parameter","paths","payoff_type","reason","","","","","","theta","value","xi","validate_correlation","validate_finite","validate_non_negative","validate_paths","validate_positive","validate_range","validate_steps","Timer","borrow","borrow_mut","deref","deref_mut","drop","elapsed_ms","from","from_subset","init","into","is_in_subset","new","norm_cdf","start","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","mc_engine","payoffs","DELTA","GAMMA","GreeksConfig","McConfig","NONE","RHO","VEGA","all","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","complement","contains","default","deref","","deref_mut","","difference","drop","","empty","epsilon","eq","extend","fmt","","","","","from","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","from_subset","","greeks","init","","inlined_clone","insert","intersection","intersects","into","","into_iter","is_all","is_empty","is_in_subset","","iter","iter_names","mc_delta_european_call_gbm_pathwise","mc_gamma_european_call_gbm_finite_diff","mc_gamma_european_call_gbm_finite_diff_batched","mc_price_option_gbm","mc_rho_european_call_gbm_pathwise","mc_vega_european_call_gbm_pathwise","not","paths","payoff","r","remove","s0","seed","set","sigma","steps","sub","sub_assign","symmetric_difference","t","to_owned","","to_subset","","to_subset_unchecked","","toggle","try_from","","try_into","","type_id","","union","use_antithetic","use_control_variate","validate","vzip","","AsianCall","BarrierCallUpAndOut","BarrierPutUpAndOut","EuropeanCall","EuropeanPut","Payoff","borrow","borrow_mut","calculate","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","from_subset","init","into","is_in_subset","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","h","","k","","","","","gbm","heston","merton","model","ou_process","sabr","Gbm","borrow","borrow_mut","deref","deref_mut","diffusion","diffusion_derivative","drift","drop","exact_step","from","from_subset","init","into","is_in_subset","mu","new","s0","sigma","step_with_dw","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Alfonsi","AndersenQE","FullTruncationEuler","Heston","HestonParams","HestonScheme","borrow","","","borrow_mut","","","clone","","clone_into","","clone_to_uninit","","deref","","","deref_mut","","","diffusion","diffusion_derivative","drift","drop","","","fmt","","from","","","from_subset","","","init","","","into","","","is_in_subset","","","kappa","new","new_with_scheme","new_with_scheme_quiet","params","r","rho","s0","scheme","scheme_name","step","step_with_dw","theta","to_owned","","to_subset","","","to_subset_unchecked","","","try_from","","","try_into","","","type_id","","","v0","vzip","","","xi","Merton","MertonParams","borrow","","borrow_mut","","deref","","deref_mut","","diffusion","diffusion_derivative","drift","drop","","from","","from_subset","","init","","into","","is_in_subset","","lambda","mu","mu_j","new","params","s0","sigma","sigma_j","step","step_with_dw","to_subset","","to_subset_unchecked","","try_from","","try_into","","type_id","","vzip","","SDEModel","diffusion","diffusion_derivative","drift","step_with_dw","OuProcess","borrow","borrow_mut","deref","deref_mut","diffusion","diffusion_derivative","drift","drop","from","from_subset","init","into","is_in_subset","mu","new","sigma","step_with_dw","theta","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Sabr","SabrParams","alpha","beta","borrow","","borrow_mut","","deref","","deref_mut","","diffusion","diffusion_derivative","drift","drop","","f0","from","","from_subset","","init","","into","","is_in_subset","","new","nu","params","rho","step","step_with_dw","to_subset","","to_subset_unchecked","","try_from","","try_into","","type_id","","v0","vzip","","write_paths_to_csv","write_summary_to_csv","CounterRng","RngFactory","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","create_counter_rng","create_std_rng","deref","","deref_mut","","drop","","fmt","from","","from_subset","","get_normal_draw","init","","into","","is_in_subset","","new","","next_u64","normal","seed_rng_from_u64","to_owned","to_subset","","to_subset_unchecked","","try_from","","try_into","","type_id","","uniform","vzip","","euler_maruyama","milstein","srk","EulerMaruyama","borrow","borrow_mut","deref","deref_mut","drop","from","from_subset","init","into","is_in_subset","new","step","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Milstein","borrow","borrow_mut","deref","deref_mut","drop","from","from_subset","init","into","is_in_subset","new","step","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Srk","borrow","borrow_mut","deref","deref_mut","drop","from","from_subset","init","into","is_in_subset","new","step","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip"],"q":[[0,"fast_sde"],[10,"fast_sde::analytics"],[11,"fast_sde::analytics::bs_analytic"],[18,"fast_sde::error"],[55,"fast_sde::error::SdeError"],[75,"fast_sde::error::validation"],[82,"fast_sde::math_utils"],[103,"fast_sde::mc"],[105,"fast_sde::mc::mc_engine"],[215,"fast_sde::mc::payoffs"],[242,"fast_sde::mc::payoffs::Payoff"],[249,"fast_sde::models"],[255,"fast_sde::models::gbm"],[281,"fast_sde::models::heston"],[363,"fast_sde::models::merton"],[410,"fast_sde::models::model"],[415,"fast_sde::models::ou_process"],[440,"fast_sde::models::sabr"],[487,"fast_sde::output"],[489,"fast_sde::rng"],[537,"fast_sde::solvers"],[540,"fast_sde::solvers::euler_maruyama"],[559,"fast_sde::solvers::milstein"],[578,"fast_sde::solvers::srk"],[597,"core::fmt"],[598,"alloc::string"],[599,"core::option"],[600,"core::result"],[601,"core::any"],[602,"core::iter::traits::collect"],[603,"bitflags::iter"],[604,"rand::rng"],[605,"core::marker"],[606,"std::io::error"],[607,"rand::rngs::std"]],"i":"``````````````````hCb11111011``11111111111111111111111`1AnB`BbBdBf1Bh45BjBl2310Bn6585````````Cd00000000000`0000000``Cf0``0000000000000Cj10101010110101011010111111110111111100101111101111011``````100010010011101010101101010100010Df0000`000000000000000000000DlDnE`EbEd43```````Ef000000000000000000000000Eh00```El1Ej1202020201201201111202012012012012012001111000111102012012012012012001200``FdFb1010100001010101010101110011100101010101010`Ff000`Fh00000000000000000000000``Fj00Fl10101000010110101010100101001010101010110````GbG`100001110101001010`1010101000`01010101010010````Gf00000000000000000`Gh00000000000000000`Gj00000000000000000","f":"```````````{{bbbbb}b}000000`````````````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{h}}}h}{{d{d{fc}}}j{}}{{dl}j}{n{{d{c}}}{}}{n{{d{fc}}}{}}{nj}{{{d{h}}{d{fA`}}}Ab}0{cc{}}{{{d{c}}}e{}{}}{{}n}{{}c{}}{dAd}{dc{}}{dAf}{d{{Ah{c}}}{}}{dc{}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{dAl}`{{}c{}}{AnAf}{B`Af}{BbAh}{Bdb}{BfAf}1{BhAf}45{Bjn}{BlAf}23{BjAf}1{BnAf}{BbAf}7{Anb}8{{{d{C`}}b}{{Cb{j}}}}00{n{{Cb{j}}}}1{{{d{C`}}bbb}{{Cb{j}}}}1`{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{n{{d{c}}}{}}{n{{d{fc}}}{}}{nj}{{{d{Cd}}}b}{cc{}}{{{d{c}}}e{}{}}{{}n}{{}c{}}{dAd}{{}Cd}{bb}{{{d{fCd}}}j}{d{{Ah{c}}}{}}{dc{}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{dAl}{{}c{}}`````````{{}Cf}{{CfCf}Cf}{{{d{fCf}}Cf}j}10{{{d{Cf}}}Ch}021{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{{{d{Cf}}}Cf}{{{d{Cj}}}Cj}{{d{d{fc}}}j{}}0{{dl}j}0{CfCf}{{{d{Cf}}Cf}Ad}{{}Cj}{n{{d{c}}}{}}0{n{{d{fc}}}{}}0={nj}0?{CjAh}{{{d{Cf}}{d{Cf}}}Ad}{{{d{fCf}}c}j{{Cn{}{{Cl{Cf}}}}}}{{{d{Cf}}{d{fA`}}}Ab}0000{cc{}}0{Ch{{Ah{Cf}}}}{ChCf}00{cCf{{Cn{}{{Cl{Cf}}}}}}{{{d{C`}}}{{Ah{Cf}}}}{{{d{c}}}e{}{}}0{CjCf}{{}n}0{dc{}}{{{d{fCf}}Cf}j}{{CfCf}Cf}{{{d{Cf}}Cf}Ad}{{}c{}}0{Cfc{}}{{{d{Cf}}}Ad}0{dAd}0{{{d{Cf}}}{{D`{Cf}}}}{{{d{Cf}}}{{Db{Cf}}}}{{{d{Cj}}}b}00{{{d{Cj}}}{{Cb{{Dd{bb}}}}}}11{CfCf}{Cjn}{CjDf}{Cjb}>0{CjDh}{{{d{fCf}}CfAd}j}24?{{{d{fCf}}Cf}j}{{CfCf}Cf}4{dc{}}0{d{{Ah{c}}}{}}0{dc{}}04{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{dAl}06{CjAd}0{{{d{Cj}}}{{Cb{j}}}}{{}c{}}0``````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{Df}}{d{{Dj{b}}}}}b}{{{d{Df}}}Df}{{d{d{fc}}}j{}}{{dl}j}{n{{d{c}}}{}}{n{{d{fc}}}{}}{nj}{cc{}}{{{d{c}}}e{}{}}{{}n}{{}c{}}{dAd}{dc{}}{d{{Ah{c}}}{}}{dc{}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{dAl}{{}c{}}{Dlb}{Dnb}{E`b}{Ebb}{Edb}43```````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{n{{d{c}}}{}}{n{{d{fc}}}{}}{{{d{Ef}}bb}b}00{nj}{{{d{Ef}}bbb}b}{cc{}}{{{d{c}}}e{}{}}{{}n}{{}c{}}{dAd}{Efb}{{bbb}Ef}11{{{d{Ef}}{d{fb}}bbb}j}{d{{Ah{c}}}{}}{dc{}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{dAl}{{}c{}}``````{d{{d{c}}}{}}00{{{d{f}}}{{d{fc}}}{}}00{{{d{Eh}}}Eh}{{{d{Ej}}}Ej}{{d{d{fc}}}j{}}0{{dl}j}0{n{{d{c}}}{}}00{n{{d{fc}}}{}}00{{{d{El}}bb}b}00{nj}00{{{d{Eh}}{d{fA`}}}Ab}{{{d{Ej}}{d{fA`}}}Ab}{cc{}}00{{{d{c}}}e{}{}}00{{}n}00{{}c{}}00{dAd}00{Ejb}{Ej{{Cb{El}}}}{{EjEh}{{Cb{El}}}}{{EjEhAd}{{Cb{El}}}}{ElEj}444{ElEh}{{{d{El}}}{{d{C`}}}}{{{d{El}}{d{fb}}{d{fb}}b{d{fc}}}{{Cb{j}}}{EnF`}}{{{d{El}}{d{fb}}bbb}j}8{dc{}}0{d{{Ah{c}}}{}}00{dc{}}00{c{{Aj{e}}}{}{}}00{{}{{Aj{c}}}{}}00{dAl}00>{{}c{}}00?``{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{n{{d{c}}}{}}0{n{{d{fc}}}{}}0{{{d{Fb}}bb}b}00{nj}0{cc{}}0{{{d{c}}}e{}{}}0{{}n}0{{}c{}}0{dAd}0{Fdb}00{FdFb}{FbFd}222{{{d{Fb}}{d{fb}}b{d{fc}}}j{EnF`}}{{{d{Fb}}{d{fb}}bbb}j}{d{{Ah{c}}}{}}0{dc{}}0{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{dAl}0{{}c{}}0`{{{d{Ff}}bb}b}00{{{d{Ff}}{d{fb}}bbb}j}`{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{n{{d{c}}}{}}{n{{d{fc}}}{}}{{{d{Fh}}bb}b}00{nj}{cc{}}{{{d{c}}}e{}{}}{{}n}{{}c{}}{dAd}{Fhb}{{bbb}Fh}1{{{d{Fh}}{d{fb}}bbb}j}2{d{{Ah{c}}}{}}{dc{}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{dAl}{{}c{}}``{Fjb}0{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{n{{d{c}}}{}}0{n{{d{fc}}}{}}0{{{d{Fl}}bb}b}00{nj}06{cc{}}0{{{d{c}}}e{}{}}0{{}n}0{{}c{}}0{dAd}0{FjFl}<{FlFj}={{{d{Fl}}{d{fb}}{d{fb}}b{d{fc}}}j{EnF`}}{{{d{Fl}}{d{fb}}bbb}j}{d{{Ah{c}}}{}}0{dc{}}0{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{dAl}0{Fjb}{{}c{}}0{{{d{C`}}{d{{Dj{{Dd{bbb}}}}}}}{{Fn{j}}}}{{{d{C`}}{d{{Dj{{Dd{{d{C`}}{d{C`}}}}}}}}}{{Fn{j}}}}``{d{{d{c}}}{}}0{{{d{f}}}{{d{fc}}}{}}0{{{d{G`}}}G`}{{d{d{fc}}}j{}}{{dl}j}{{{d{Gb}}Dh}G`}{{{d{Gb}}Dh}Gd}{n{{d{c}}}{}}0{n{{d{fc}}}{}}0{nj}0{{{d{G`}}{d{fA`}}}Ab}{cc{}}0{{{d{c}}}e{}{}}0{{{d{fc}}}b{EnF`}}{{}n}0{{}c{}}0{dAd}0{DhGb}{{DhDh}G`}{{{d{fG`}}}Dh}{{{d{fG`}}}b}{DhGd}{dc{}}{d{{Ah{c}}}{}}0{dc{}}0{c{{Aj{e}}}{}{}}0{{}{{Aj{c}}}{}}0{dAl}07{{}c{}}0````{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{n{{d{c}}}{}}{n{{d{fc}}}{}}{nj}{cc{}}{{{d{c}}}e{}{}}{{}n}{{}c{}}{dAd}{{}Gf}{{{d{c}}{d{fb}}bb{d{fe}}}jFf{EnF`}}{d{{Ah{c}}}{}}{dc{}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{dAl}{{}c{}}`{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{n{{d{c}}}{}}{n{{d{fc}}}{}}{nj}{cc{}}{{{d{c}}}e{}{}}{{}n}{{}c{}}{dAd}{{}Gh}{{{d{c}}{d{fb}}bb{d{fe}}}jFf{EnF`}}{d{{Ah{c}}}{}}{dc{}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{dAl}{{}c{}}`{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{n{{d{c}}}{}}{n{{d{fc}}}{}}{nj}{cc{}}{{{d{c}}}e{}{}}{{}n}{{}c{}}{dAd}{{}Gj}{{{d{c}}{d{fb}}bb{d{fe}}}jFf{EnF`}}{d{{Ah{c}}}{}}{dc{}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{dAl}{{}c{}}","D":"A@h","p":[[1,"f64"],[1,"reference",null,null,1],[0,"mut"],[6,"SdeError",18],[1,"unit"],[1,"u8"],[1,"usize"],[5,"Formatter",597],[8,"Result",597],[1,"bool"],[5,"String",598],[6,"Option",599,null,1],[6,"Result",600,null,1],[5,"TypeId",601],[15,"InvalidParameters",55],[15,"UnsupportedOperation",55],[15,"CalibrationError",55],[15,"FellerConditionViolation",55],[15,"InvalidConfiguration",55],[15,"NumericalInstability",55],[15,"MonteCarloError",55],[15,"PayoffError",55],[15,"RandomGenerationError",55],[1,"str"],[8,"SdeResult",18],[5,"Timer",82],[5,"GreeksConfig",105],[1,"u32"],[5,"McConfig",105],[17,"Item"],[10,"IntoIterator",602],[5,"Iter",603],[5,"IterNames",603],[1,"tuple",null,null,1],[6,"Payoff",215],[1,"u64"],[1,"slice"],[15,"BarrierCallUpAndOut",242],[15,"BarrierPutUpAndOut",242],[15,"EuropeanCall",242],[15,"EuropeanPut",242],[15,"AsianCall",242],[5,"Gbm",255],[6,"HestonScheme",281],[5,"HestonParams",281],[5,"Heston",281],[10,"Rng",604],[10,"Sized",605],[5,"Merton",363],[5,"MertonParams",363],[10,"SDEModel",410],[5,"OuProcess",415],[5,"SabrParams",440],[5,"Sabr",440],[8,"Result",606,null,1],[5,"CounterRng",489],[5,"RngFactory",489],[5,"StdRng",607],[5,"EulerMaruyama",540],[5,"Milstein",559],[5,"Srk",578]],"r":[[0,18],[1,18]],"b":[[39,"impl-Debug-for-SdeError"],[40,"impl-Display-for-SdeError"],[117,"impl-Flags-for-GreeksConfig"],[118,"impl-GreeksConfig"],[145,"impl-Binary-for-GreeksConfig"],[146,"impl-Debug-for-GreeksConfig"],[147,"impl-UpperHex-for-GreeksConfig"],[148,"impl-LowerHex-for-GreeksConfig"],[149,"impl-Octal-for-GreeksConfig"],[153,"impl-Flags-for-GreeksConfig"],[154,"impl-GreeksConfig"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAANEBOwAAAAgACgAAACAACQArAAEALgAHADcAFABTAAYAWwABAF4ACgBqAAYAdgAAAHoACQCGAAQAjAABAI8AAQCSAAQAmgAAAJ8ABQCqAAAArQABALgAAgC8AAEAvwABAMQABgDMAAUA0wABANYAAQDeAAEA4QAFAOgAAQDrAA8A/AANAAsBAQAOASsAPQEFAEYBCwBUASYAfQEDAIMBJQCqAQEArQEdAM0BAwDTARYA7AEGAPUBBgD+AQQABQIUAB4CBAAkAgEAJwIBACoCBQAxAgQANwIBADoCAQA9AgUARAIEAEoCAQBNAgEAUAIFAA==","P":[[31,"T"],[33,""],[34,"T"],[35,""],[36,"T"],[38,""],[41,"T"],[42,"SS,SP"],[43,""],[44,"U"],[45,""],[46,"T"],[47,""],[48,"SS"],[50,"U,T"],[51,"U"],[52,""],[54,"V"],[55,""],[83,"T"],[87,""],[89,"T"],[90,"SS,SP"],[91,""],[92,"U"],[93,""],[97,"SS"],[99,"U,T"],[100,"U"],[101,""],[102,"V"],[112,""],[121,"T"],[125,""],[127,"T"],[129,""],[134,"T"],[138,""],[144,"T"],[145,""],[150,"T"],[152,""],[156,"T"],[157,""],[158,"SS,SP"],[160,""],[163,"T"],[164,""],[167,"U"],[169,"IntoIterator::IntoIter"],[170,""],[196,"T"],[198,"SS"],[202,""],[203,"U,T"],[205,"U"],[207,""],[213,"V"],[221,"T"],[223,""],[225,"T"],[226,""],[227,"T"],[229,""],[230,"T"],[231,"SS,SP"],[232,""],[233,"U"],[234,""],[235,"T"],[236,"SS"],[238,"U,T"],[239,"U"],[240,""],[241,"V"],[242,""],[256,"T"],[260,""],[265,"T"],[266,"SS,SP"],[267,""],[268,"U"],[269,""],[275,"SS"],[277,"U,T"],[278,"U"],[279,""],[280,"V"],[287,"T"],[293,""],[295,"T"],[297,""],[299,"T"],[305,""],[313,"T"],[316,"SS,SP"],[319,""],[322,"U"],[325,""],[338,"R"],[339,""],[341,"T"],[343,"SS"],[349,"U,T"],[352,"U"],[355,""],[359,"V"],[362,""],[365,"T"],[373,""],[378,"T"],[380,"SS,SP"],[382,""],[384,"U"],[386,""],[396,"R"],[397,""],[398,"SS"],[402,"U,T"],[404,"U"],[406,""],[408,"V"],[411,""],[416,"T"],[420,""],[424,"T"],[425,"SS,SP"],[426,""],[427,"U"],[428,""],[434,"SS"],[436,"U,T"],[437,"U"],[438,""],[439,"V"],[442,""],[444,"T"],[452,""],[458,"T"],[460,"SS,SP"],[462,""],[464,"U"],[466,""],[472,"R"],[473,""],[474,"SS"],[478,"U,T"],[480,"U"],[482,""],[485,"V"],[487,""],[491,"T"],[495,""],[496,"T"],[497,""],[500,"T"],[504,""],[507,"T"],[509,"SS,SP"],[511,"R"],[512,""],[514,"U"],[516,""],[523,"T"],[524,"SS"],[528,"U,T"],[530,"U"],[532,""],[535,"V"],[541,"T"],[545,""],[546,"T"],[547,"SS,SP"],[548,""],[549,"U"],[550,""],[552,"M,R"],[553,"SS"],[555,"U,T"],[556,"U"],[557,""],[558,"V"],[560,"T"],[564,""],[565,"T"],[566,"SS,SP"],[567,""],[568,"U"],[569,""],[571,"M,R"],[572,"SS"],[574,"U,T"],[575,"U"],[576,""],[577,"V"],[579,"T"],[583,""],[584,"T"],[585,"SS,SP"],[586,""],[587,"U"],[588,""],[590,"M,R"],[591,"SS"],[593,"U,T"],[594,"U"],[595,""],[596,"V"]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[1712,16362]}